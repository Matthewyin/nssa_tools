name: Deploy to Firebase App Hosting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Clean install dependencies
      run: |
        # Remove existing files to ensure clean install
        rm -rf node_modules package-lock.json .nuxt .output

        # Install dependencies with specific npm version and settings
        npm install --no-optional --legacy-peer-deps

    - name: Verify installation and prepare
      run: |
        # Verify installation
        npm list --depth=0 || true

        # Run prepare step manually to catch any issues early
        npm run postinstall || echo "Postinstall completed with warnings"

    - name: Create environment file
      run: |
        echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
        echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
        echo "FIREBASE_ADMIN_PRIVATE_KEY=${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}" >> .env
        echo "FIREBASE_ADMIN_CLIENT_EMAIL=${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}" >> .env
        echo "FIREBASE_ADMIN_PROJECT_ID=${{ secrets.FIREBASE_ADMIN_PROJECT_ID }}" >> .env
        echo "NODE_ENV=production" >> .env

    - name: Run type check
      run: npm run typecheck
      continue-on-error: true

    - name: Build application
      run: |
        # Try building with fallback for oxc-parser issues
        npm run build || {
          echo "Build failed, trying with legacy build..."
          # Remove problematic dependencies and retry
          npm uninstall oxc-parser || true
          npm run build
        }

    - name: Deploy to Firebase App Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_N8N_PROJECT_460516 }}'
        projectId: n8n-project-460516
        channelId: live
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks
